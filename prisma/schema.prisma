generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  username  String     @unique
  email     String      @unique
  password  String?     @db.VarChar(255)
  tagList   String?     @db.VarChar(70)
  bio       String?     @db.VarChar(150)
  private   Boolean     @default(false)
  blueTick  Boolean     @default(false)
  posts     Post[]
  likespost Like[]
  comments  Comment[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  SavedPost SavedPost[]
}

model Post {
  id        Int         @id @default(autoincrement())
  title     String      @db.VarChar(250) 
  content   String?
  published Boolean     @default(false)
  likes     Like[]
  owner     User        @relation(fields: [ownerId], references: [id])
  ownerId   Int
  Comments  Comment[]
  savedby   SavedPost[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Like {
  id     Int    @id @default(autoincrement())
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String @db.VarChar(100)
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
}

model SavedPost {
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  post   Post   @relation(fields: [postId], references: [id])
  postId Int

  @@id([postId, userId])
}

